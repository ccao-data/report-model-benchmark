---
format: gfm
---

This repository compares the time-to-train of two gradient-boosted decision tree (GBDT) frameworks - LightGBM and XGBoost - across different hardware. The purpose of this comparison is to help the CCAO decide which framework to use  

- Comparing performance
- Comparing hardware
- Model switch decision
- Purchasing decision

- Show params
- Tasks
  - Train using N sales, predict on test (perf numbers)
  - Time to train full set
  - Time to predict N rows
  - Time to calc N shaps

```{r setup, echo=FALSE, message=FALSE}
library(arrow)
library(dplyr)
library(gt)
library(purrr)
library(readr)

model_specs <- read_csv("input/model_specs.csv") %>%
  mutate(
    across(starts_with("Approx") & where(is.character), ~ parse_number(.x))
  ) %>%
  select(Key:`Approx. Peak Device Utilization`)

perf_df <- map_dfr(
  list.files("output/performance", pattern = "*.parquet", full.names = TRUE),
  read_parquet
)

time_df <- map_dfr(
  list.files("output/timing", pattern = "*.parquet", full.names = TRUE),
  read_parquet
) %>%
  select(-c(tic, toc)) %>%
  tidyr::pivot_wider(id_cols = run_id, names_from = stage, values_from = time)

full_data <- model_specs %>%
  left_join(time_df, by = c("Key" = "run_id")) %>%
  left_join(perf_df, by = c("Key" = "run_id")) %>%
  select(-c(Key, time)) %>%
  rename(
    `Wall Time (Full Run)` = train,
    `Wall Time (Prediction)` = predict,
    `Wall Time (SHAP)` = shap,
    r2 = rsq
  ) %>%
  rename_with(toupper, rmse:mki) %>%
  mutate(
    `Approx. Peak Device Utilization` = `Approx. Peak Device Utilization` / 100,
    MAPE = MAPE / 100
  )
```

```{r create_table, echo=FALSE, message=FALSE}
full_data %>%
gt() %>%
  tab_header(title = "LightGBM CPU/GPU vs XGBoost CPU/GPU") %>%
  tab_footnote(
    footnote = paste(
      "Categoricals with over 50 values are hashed,",
      "otherwise one-hot encoded"
    ),
    locations = cells_body(Type, c(3, 7, 8))
  ) %>%
  tab_footnote(
    footnote = paste(
      "Categoricals with over 50 values are hashed,",
      "otherwise native (un touched)"
    ),
    locations = cells_body(Type, 6)
  ) %>%
  fmt_percent(starts_with("Approx."), decimals = 0) %>%
  fmt_percent(MAPE, decimals = 2) %>%
  fmt_duration(
    starts_with("Wall Time"),
    input_units = "seconds",
    output_units = c("hours", "minutes", "seconds")
  ) %>%
  fmt_currency(c(contains("RMSE"), contains("MAE")), decimals = 0) %>%
  fmt_number(R2:MKI, decimal = 3) %>%
  tab_style(style = cell_text(weight = "bold"), cells_title()) %>%
  tab_style(style = cell_text(weight = "bold"), cells_column_labels())
```
